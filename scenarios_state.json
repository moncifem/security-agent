{
  "scenarios": [
    {
      "id": "business_logic_admin_flag_registration",
      "description": "Business Logic: Attempt to register as admin by injecting admin flag in request",
      "endpoint": "POST /api/users",
      "method": "POST",
      "payload": {
        "user": {
          "email": "admin_bypass@example.com",
          "username": "admin_bypass",
          "password": "password123",
          "admin": true
        }
      },
      "auth_token": null,
      "executed": false
    },
    {
      "id": "business_logic_mass_assignment_registration",
      "description": "Business Logic: Mass assignment vulnerability in user registration",
      "endpoint": "POST /api/users",
      "method": "POST",
      "payload": {
        "user": {
          "email": "mass_assignment@example.com",
          "username": "mass_assignment",
          "password": "password123",
          "role": "administrator",
          "admin": true
        }
      },
      "auth_token": null,
      "executed": false
    },
    {
      "id": "business_logic_account_takeover_same_email",
      "description": "Business Logic: Account takeover by registering with same email but different case",
      "endpoint": "POST /api/users",
      "method": "POST",
      "payload": {
        "user": {
          "email": "Existing.User@example.com",
          "username": "case_sensitive_bypass",
          "password": "password123"
        }
      },
      "auth_token": null,
      "executed": false
    },
    {
      "id": "business_logic_login_sql_injection",
      "description": "Business Logic: SQL Injection in login credentials",
      "endpoint": "POST /api/v2/users/login",
      "method": "POST",
      "payload": {
        "user": {
          "email": "admin@example.com' --",
          "password": "anything"
        }
      },
      "auth_token": null,
      "executed": false
    },
    {
      "id": "business_logic_password_json_null",
      "description": "Business Logic: Login with JSON null password",
      "endpoint": "POST /api/v2/users/login",
      "method": "POST",
      "payload": {
        "user": {
          "email": "user@example.com",
          "password": null
        }
      },
      "auth_token": null,
      "executed": false
    },
    {
      "id": "business_logic_login_nosql_injection",
      "description": "Business Logic: NoSQL Injection in login",
      "endpoint": "POST /api/v2/users/login",
      "method": "POST",
      "payload": {
        "user": {
          "email": "user@example.com",
          "password": {
            "$ne": null
          }
        }
      },
      "auth_token": null,
      "executed": false
    },
    {
      "id": "idor_user_profile_access",
      "description": "IDOR: Accessing another user's profile details",
      "endpoint": "GET /api/user",
      "method": "GET",
      "payload": null,
      "auth_token": "STOLEN_USER_TOKEN",
      "executed": false
    },
    {
      "id": "privilege_escalation_admin_flag",
      "description": "Privilege Escalation: Regular user attempts to set admin flag",
      "endpoint": "PUT /api/user",
      "method": "PUT",
      "payload": {
        "user": {
          "admin": true
        }
      },
      "auth_token": "REGULAR_USER_TOKEN",
      "executed": false
    },
    {
      "id": "privilege_escalation_role_assignment",
      "description": "Privilege Escalation: Regular user attempts to set admin role",
      "endpoint": "PUT /api/user",
      "method": "PUT",
      "payload": {
        "user": {
          "role": "administrator"
        }
      },
      "auth_token": "REGULAR_USER_TOKEN",
      "executed": false
    },
    {
      "id": "function_level_auth_bypass_user_endpoint",
      "description": "Function-Level Authorization: Unauthenticated access to user profile endpoint",
      "endpoint": "GET /api/user",
      "method": "GET",
      "payload": null,
      "auth_token": null,
      "executed": false
    },
    {
      "id": "business_logic_negative_payment",
      "description": "Business Logic: Payment with negative amount to credit account",
      "endpoint": "POST /api/membership",
      "method": "POST",
      "payload": {
        "number": "4111111111111111",
        "cvc": "123",
        "expiry": "12/25",
        "name": "Test User",
        "amount": -100
      },
      "auth_token": "VALID_USER_TOKEN",
      "executed": false
    },
    {
      "id": "business_logic_payment_race_condition",
      "description": "Business Logic: Race condition in payment processing",
      "endpoint": "POST /api/membership",
      "method": "POST",
      "payload": {
        "number": "4111111111111111",
        "cvc": "123",
        "expiry": "12/25",
        "name": "Test User"
      },
      "auth_token": "VALID_USER_TOKEN",
      "executed": false
    },
    {
      "id": "idor_payment_other_user_card",
      "description": "IDOR: Using another user's stored payment method",
      "endpoint": "POST /api/membership",
      "method": "POST",
      "payload": {
        "user_id": "OTHER_USER_ID",
        "payment_method_id": "OTHER_USER_CARD"
      },
      "auth_token": "VALID_USER_TOKEN",
      "executed": false
    },
    {
      "id": "function_level_auth_bypass_membership",
      "description": "Function-Level Authorization: Unauthenticated access to membership endpoint",
      "endpoint": "POST /api/membership",
      "method": "POST",
      "payload": {
        "number": "4111111111111111",
        "cvc": "123",
        "expiry": "12/25",
        "name": "Test User"
      },
      "auth_token": null,
      "executed": false
    },
    {
      "id": "idor_profile_cross_user_access",
      "description": "IDOR: User A accessing User B's profile data",
      "endpoint": "GET /api/profiles/{username}",
      "method": "GET",
      "payload": null,
      "auth_token": "USER_A_TOKEN",
      "executed": false
    },
    {
      "id": "idor_profile_admin_access",
      "description": "IDOR: Regular user accessing admin profile data",
      "endpoint": "GET /api/profiles/{username}",
      "method": "GET",
      "payload": null,
      "auth_token": "REGULAR_USER_TOKEN",
      "executed": false
    },
    {
      "id": "function_level_auth_bypass_profile",
      "description": "Function-Level Authorization: Unauthenticated access to profile endpoint",
      "endpoint": "GET /api/profiles/{username}",
      "method": "GET",
      "payload": null,
      "auth_token": null,
      "executed": false
    },
    {
      "id": "idor_follow_admin_user",
      "description": "IDOR: Regular user attempting to follow admin user",
      "endpoint": "POST /api/profiles/{username}/follow",
      "method": "POST",
      "payload": null,
      "auth_token": "REGULAR_USER_TOKEN",
      "executed": false
    },
    {
      "id": "function_level_auth_bypass_follow",
      "description": "Function-Level Authorization: Unauthenticated follow request",
      "endpoint": "POST /api/profiles/{username}/follow",
      "method": "POST",
      "payload": null,
      "auth_token": null,
      "executed": false
    },
    {
      "id": "idor_unfollow_not_following",
      "description": "IDOR: Unfollow a user that the current user isn't following",
      "endpoint": "DELETE /api/profiles/{username}/follow",
      "method": "DELETE",
      "payload": null,
      "auth_token": "VALID_USER_TOKEN",
      "executed": false
    },
    {
      "id": "function_level_auth_bypass_feed",
      "description": "Function-Level Authorization: Unauthenticated access to feed endpoint",
      "endpoint": "GET /api/articles/feed",
      "method": "GET",
      "payload": null,
      "auth_token": null,
      "executed": false
    },
    {
      "id": "business_logic_feed_parameter_tampering",
      "description": "Business Logic: Parameter tampering to access more articles than allowed",
      "endpoint": "GET /api/articles/feed",
      "method": "GET",
      "payload": null,
      "auth_token": "VALID_USER_TOKEN",
      "executed": false
    },
    {
      "id": "idor_favorite_private_article",
      "description": "IDOR: User attempts to favorite a private/restricted article",
      "endpoint": "POST /api/articles/{slug}/favorite",
      "method": "POST",
      "payload": null,
      "auth_token": "REGULAR_USER_TOKEN",
      "executed": false
    },
    {
      "id": "function_level_auth_bypass_favorite",
      "description": "Function-Level Authorization: Unauthenticated favorite request",
      "endpoint": "POST /api/articles/{slug}/favorite",
      "method": "POST",
      "payload": null,
      "auth_token": null,
      "executed": false
    },
    {
      "id": "idor_unfavorite_private_article",
      "description": "IDOR: User attempts to unfavorite a private/restricted article",
      "endpoint": "DELETE /api/articles/{slug}/favorite",
      "method": "DELETE",
      "payload": null,
      "auth_token": "REGULAR_USER_TOKEN",
      "executed": false
    },
    {
      "id": "business_logic_article_parameter_manipulation",
      "description": "Business Logic: Parameter manipulation to access private articles",
      "endpoint": "GET /api/articles",
      "method": "GET",
      "payload": null,
      "auth_token": "REGULAR_USER_TOKEN",
      "executed": false
    },
    {
      "id": "business_logic_article_author_impersonation",
      "description": "Business Logic: Create article with manipulated author parameter",
      "endpoint": "POST /api/articles",
      "method": "POST",
      "payload": {
        "article": {
          "title": "Test",
          "description": "Test",
          "body": "Test",
          "author": "admin"
        }
      },
      "auth_token": "REGULAR_USER_TOKEN",
      "executed": false
    },
    {
      "id": "function_level_auth_bypass_article_create",
      "description": "Function-Level Authorization: Unauthenticated article creation",
      "endpoint": "POST /api/articles",
      "method": "POST",
      "payload": {
        "article": {
          "title": "Test",
          "description": "Test",
          "body": "Test"
        }
      },
      "auth_token": null,
      "executed": false
    },
    {
      "id": "idor_article_cross_user_access",
      "description": "IDOR: Access another user's article details",
      "endpoint": "GET /api/articles/{slug}",
      "method": "GET",
      "payload": null,
      "auth_token": "USER_A_TOKEN",
      "executed": false
    },
    {
      "id": "idor_article_cross_user_modify",
      "description": "IDOR: User A attempts to modify User B's article",
      "endpoint": "PUT /api/articles/{slug}",
      "method": "PUT",
      "payload": {
        "article": {
          "title": "Hijacked Article",
          "description": "Modified by attacker",
          "body": "New content"
        }
      },
      "auth_token": "USER_A_TOKEN",
      "executed": false
    },
    {
      "id": "idor_article_cross_user_delete",
      "description": "IDOR: User A attempts to delete User B's article",
      "endpoint": "DELETE /api/articles/{slug}",
      "method": "DELETE",
      "payload": null,
      "auth_token": "USER_A_TOKEN",
      "executed": false
    },
    {
      "id": "function_level_auth_bypass_article_update",
      "description": "Function-Level Authorization: Unauthenticated article update",
      "endpoint": "PUT /api/articles/{slug}",
      "method": "PUT",
      "payload": {
        "article": {
          "title": "Modified Title"
        }
      },
      "auth_token": null,
      "executed": false
    },
    {
      "id": "function_level_auth_bypass_article_delete",
      "description": "Function-Level Authorization: Unauthenticated article deletion",
      "endpoint": "DELETE /api/articles/{slug}",
      "method": "DELETE",
      "payload": null,
      "auth_token": null,
      "executed": false
    },
    {
      "id": "privilege_escalation_debug_access",
      "description": "Privilege Escalation: Regular user accessing debug endpoint",
      "endpoint": "POST /api/debug",
      "method": "POST",
      "payload": {
        "body": {
          "command": "whoami"
        }
      },
      "auth_token": "REGULAR_USER_TOKEN",
      "executed": false
    },
    {
      "id": "function_level_auth_bypass_debug",
      "description": "Function-Level Authorization: Unauthenticated access to debug endpoint",
      "endpoint": "POST /api/debug",
      "method": "POST",
      "payload": {
        "body": {
          "command": "ls -la"
        }
      },
      "auth_token": null,
      "executed": false
    },
    {
      "id": "business_logic_rce_debug_endpoint",
      "description": "Business Logic: Command injection in debug endpoint",
      "endpoint": "POST /api/debug",
      "method": "POST",
      "payload": {
        "body": {
          "command": "ls; cat /etc/passwd"
        }
      },
      "auth_token": "ADMIN_TOKEN",
      "executed": false
    },
    {
      "id": "idor_comment_access_private_article",
      "description": "IDOR: User attempts to access comments on private/restricted articles",
      "endpoint": "GET /api/articles/{slug}/comments",
      "method": "GET",
      "payload": null,
      "auth_token": "REGULAR_USER_TOKEN",
      "executed": false
    },
    {
      "id": "function_level_auth_bypass_comment_creation",
      "description": "Function-Level Authorization: Unauthenticated comment creation",
      "endpoint": "POST /api/articles/{slug}/comments",
      "method": "POST",
      "payload": {
        "comment": {
          "body": "Test comment"
        }
      },
      "auth_token": null,
      "executed": false
    },
    {
      "id": "idor_comment_cross_user_delete",
      "description": "IDOR: User A attempts to delete User B's comment",
      "endpoint": "DELETE /api/articles/{slug}/comments/{comment_id}",
      "method": "DELETE",
      "payload": null,
      "auth_token": "USER_A_TOKEN",
      "executed": false
    },
    {
      "id": "function_level_auth_bypass_comment_delete",
      "description": "Function-Level Authorization: Unauthenticated comment deletion",
      "endpoint": "DELETE /api/articles/{slug}/comments/{comment_id}",
      "method": "DELETE",
      "payload": null,
      "auth_token": null,
      "executed": false
    },
    {
      "id": "attack_chain_account_takeover",
      "description": "Attack Chain: Account takeover through multiple vulnerabilities",
      "endpoint": "",
      "method": "",
      "payload": null,
      "auth_token": null,
      "executed": false
    },
    {
      "id": "attack_chain_financial_fraud",
      "description": "Attack Chain: Financial fraud through multiple vulnerabilities",
      "endpoint": "",
      "method": "",
      "payload": null,
      "auth_token": null,
      "executed": false
    },
    {
      "id": "attack_chain_data_exfiltration",
      "description": "Attack Chain: Data exfiltration through multiple vulnerabilities",
      "endpoint": "",
      "method": "",
      "payload": null,
      "auth_token": null,
      "executed": false
    },
    {
      "id": "toctou_user_profile_update",
      "description": "TOCTOU: Time-of-check to time-of-use attack on user profile validation",
      "endpoint": "PUT /api/user",
      "method": "PUT",
      "payload": {
        "user": {
          "admin": true
        },
        "validation_bypass": true
      },
      "auth_token": "VALID_USER_TOKEN",
      "executed": false
    },
    {
      "id": "session_state_manipulation",
      "description": "Session State: Manipulate session state to bypass authorization checks",
      "endpoint": "GET /api/articles/feed",
      "method": "GET",
      "payload": null,
      "auth_token": "MANIPULATED_SESSION_TOKEN",
      "executed": false
    },
    {
      "id": "bulk_operation_privilege_abuse",
      "description": "Bulk Operation: Use bulk operations to bypass individual authorization checks",
      "endpoint": "POST /api/articles",
      "method": "POST",
      "payload": {
        "bulk_create": [
          {
            "title": "Article 1",
            "description": "Test",
            "body": "Test"
          },
          {
            "title": "Article 2",
            "description": "Test",
            "body": "Test"
          }
        ],
        "bypass_auth": true
      },
      "auth_token": "LIMITED_USER_TOKEN",
      "executed": false
    }
  ]
}